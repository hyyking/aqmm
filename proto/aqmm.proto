syntax = "proto3";

package protocol;

// Buy/Sell tag for an order
enum Kind {
	Buy = 0;
	Sell = 1;
}

// Security
//	security_id: id to use if you want to place orders
//	description: description of the security
message Security {
	uint64 security_id = 1;
	string description = 2;
}

// SecurityBroadcast
//	security: affected security
//	quantity: current quantity
message SecurityBroadcast {
	Security security =1;
	double quantity = 2;
}
// Broadcast
//	broadcast: all updates on securities
message Broadcast {
	repeated SecurityBroadcast broadcast = 1;
}

// Order
//	security_id: targeted security
//	kind: direction of the order
//	amount: amount bought/sold
message Order {
	uint64 security_id = 1;
	Kind kind = 2;	
	double amount = 3;
}

// Result of an order
//	security_id: targeted security
//	kind: direction of all orders for a security
message OrderResult {
	uint64 security_id = 1;
	Kind kind = 2;
	double balance = 3;
}

// Request to get the list of securities
message RequestSecurities {}
// Response with all the availabe securities
message ResponseSecurities {
	repeated Security securities = 1;
}

// Request to get authenticated to the server
message RequestAuthenticate {}
// Response to authentication request with the uuid
message ResponseAuthenticate {
	bytes uuid = 1;
}

// Request to place orders
message RequestOrder {
	repeated Order orders = 1;
}
// All the order results
message ResponseOrder {
	repeated OrderResult orders = 1;
}

// Unified response type
message Response {
	uint32 id = 1;
	oneof response {
		ResponseAuthenticate auth = 2;
		ResponseOrder order = 3;
		ResponseSecurities security = 4;
	}
}

// Unified request type (uuid can be empty before authentication)
message Request {
	uint32 id = 1;
	bytes uuid = 2;
	oneof request {
		RequestAuthenticate auth = 3;
		RequestOrder order = 4;
		RequestSecurities security = 5;
	}
}
